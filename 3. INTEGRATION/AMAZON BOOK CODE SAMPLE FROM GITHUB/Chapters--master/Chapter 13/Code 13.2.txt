<!--
Copyright 2019 Lalit Kumar 

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.  -->


<apex:page controller="YT_Controller"  showHeader="false">
  
    <html><head><title>Google APIs - Sample JS Page</title></head>
    <body>
    
    <!-- (i) Create a HTML button and output Text elements   -->
    
    <button id="Authorize">Authorize</button>
    <button id="showdetails">Insert Record</button>
        <div>
          Views: <output type= "text" id="v" /><br/>
          Likes : <output type= "text" id = "l"/><br/>
          Dislikes: <output type= "text" id= "d"/><br/>
          Comments: <output type= "text" id= "c"/><br/>
          
        </div>    


    <script>

  // Global variables for GoogleAuthentication object, auth status.
  var GoogleAuthentication; 
  var stringified;

  /**
   * gapi.load() is used for loading API's client and auth2 modules 
   * After the modules have been loaded the function initclient is called
   **/
  function handleClientLoad() {
    gapi.load('client:auth2', initClient);
  }


// (ii) function initiating the google client library, defining scope and hitting the endpoint   
          function initClient() {
            // In order to send API requests the gapi.client object is initialized
                       // The API key and client ID is obtained from the API Console.
            // The space-delimited list of access scopes is represented by the 'scope' field
        
            gapi.client.init({
                'clientId': '1073987654457505-oknsdff4t4f4gt43c.apps.googleusercontent.com',
                'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest'],
                'scope': 'https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner'
            }).then(function () {
              GoogleAuthentication = gapi.auth2.getAuthInstance();
        
              // Track the user's sign-in state 
              GoogleAuthentication.isSignedIn.listen(updateSigninStatus);     
              // the following function handles the initial sign-in state
              setSigninStatus();
        
              //   handleAuthentication function will be called on click of "Authorize" button
              $('#Authorize').click(function() {
                 handleAuthentication(event);
                }); 
                
                // (iii)  Insert a record in 'YouTube Details' object by invoking Javascript Remoting technique 
                // youtube information will get inserted as record once you hit 'Insert Record' button 
                $('#showdetails').click(function() {
                    
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.YT_Controller.insertVideoDetails}',
                     stringified, 
                    function(result, event){
                        if (event.status) {
                            
                           alert('New record is inserted');
                        } else if (event.type === 'exception') {
                           alert('failure');
                        } else {
                            alert('failure 1');
                        }
                    }, 
                    {escape: true}
                );
                
              }); 
            });
          }

          function handleAuthentication(event) {
            // Sign user in after click on auth button.
            GoogleAuthentication.signIn();
          }
         //This function will hit specific YouTube API to get the desired video information 
          function setSigninStatus() {
            var user = GoogleAuthentication.currentUser.get();
            isAuthorized = user.hasGrantedScopes('https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtubepartner');    
            if (isAuthorized) {
              makeApiRequest('GET',
                        '/youtube/v3/videos',
                        {'id': 'xmU0s2QtaEY',
                         'part': 'statistics'} 
                        );
            }
          }
         // This function will track and return the user login state  
          function updateSigninStatus(isSignedIn) {
            setSigninStatus();
          }
          
// (iii)  function for mapping the response to the HTML elements on the page.   
          function executeRequest(request) {
            request.execute(function(response) {
              console.log(response);
               console.log('response---------- '+response);  
              
              
              // convert response to JSON string
              stringified = JSON.stringify(response);
              var view ;
              var likes ;
              var dislikes ;
              var comment ;
                 view = response.items[0].statistics.viewCount;
                 console.log('view '+ view);
                 likes = response.items[0].statistics.likeCount;
                 console.log('likes '+ likes);
                 dislikes = response.items[0].statistics.dislikeCount;
                 console.log('dislikeCount '+ dislikes );
                 comment = response.items[0].statistics.commentCount;
                 console.log('commentCount '+ comment);
                   
                document.getElementById("v").value  = view;
                document.getElementById("l").value = likes;
                document.getElementById("d").value = dislikes;
                document.getElementById("c").value = comment;
                         
               return response;
            });
          }
         
          function makeApiRequest(method, endpoint, params) {    
             var apiRequest = gapi.client.request({      
                  'method': method,
                  'path': endpoint,
                  'params': params
              });
            
            executeRequest(apiRequest);
          }
          
          

    </script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script async= "" defer="" src="https://apis.google.com/js/api.js" 
            onload="this.onload=handleClientLoad();" 
            onreadystatechange="if (this.readyState === 'complete') this.onload()">
    </script>
</body></html>
</apex:page>
                                        
